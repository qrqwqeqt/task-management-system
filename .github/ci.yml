name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Check code style
      run: npm run format
      
    - name: Lint code
      run: npm run lint
      
    - name: Run tests
      run: npm test || true
      
    - name: Build
      run: npm run build || true

  cd:
    name: Continuous Deployment
    needs: ci
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Create deployment
      uses: bobheadxi/deployments@v1
      id: deployment
      with:
        step: start
        token: ${{ secrets.GITHUB_TOKEN }}
        env: production
        desc: Deploy to Render production environment

    - name: Deploy to Render
      id: deploy
      uses: johnbeynon/render-deploy-action@v0.0.8
      with:
        service-id: ${{ secrets.RENDER_SERVICE_ID }}
        api-key: ${{ secrets.RENDER_API_KEY }}

    - name: Wait for deploy
      run: |
        echo "Waiting for deployment to complete..."
        sleep 30  # Даем время на развертывание

    - name: Verify deployment
      run: |
        STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" ${{ secrets.RENDER_APP_URL }})
        if [ $STATUS_CODE -eq 200 ]; then
          echo "Deployment verified successfully!"
        else
          echo "Deployment verification failed!"
          exit 1
        fi

    - name: Update deployment status
      uses: bobheadxi/deployments@v1
      if: always()
      with:
        step: finish
        token: ${{ secrets.GITHUB_TOKEN }}
        status: ${{ job.status }}
        env: production
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Notify on success
      if: success()
      run: |
        echo "::notice::Deployment to Render completed successfully! URL: ${{ secrets.RENDER_APP_URL }}"

    - name: Notify on failure
      if: failure()
      run: |
        echo "::error::Deployment to Render failed!"